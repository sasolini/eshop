{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollecitonsSuccess, fetchCollectionFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollecitonsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  } // return dispatch => {\n  //   const collectionRef = firestore.collection('collections');\n  //   dispatch(fetchCollectionsStart());\n  //   collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //       const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n  //       dispatch(fetchCollecitonsSuccess(collectionsMap));\n  //     })\n  //     .catch(err => dispatch(fetchCollectionFailure(err.message)));\n  // };\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["D:/WebDev/eshop/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionSnapshotToMap","fetchCollecitonsSuccess","fetchCollectionFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,sBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,8BAAD,EAAiCO,QAAjC,CAAjC;AACA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,sBAAsB,CAACQ,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD,GARsC,CAUvC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CACdQ,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap,\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  fetchCollecitonsSuccess,\r\n  fetchCollectionFailure,\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\r\n    yield put(fetchCollecitonsSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionFailure(error.message));\r\n  }\r\n\r\n  // return dispatch => {\r\n  //   const collectionRef = firestore.collection('collections');\r\n  //   dispatch(fetchCollectionsStart());\r\n\r\n  //   collectionRef\r\n  //     .get()\r\n  //     .then(snapshot => {\r\n  //       const collectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n  //       dispatch(fetchCollecitonsSuccess(collectionsMap));\r\n  //     })\r\n  //     .catch(err => dispatch(fetchCollectionFailure(err.message)));\r\n  // };\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n\r\nexport function* shopSagas() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}